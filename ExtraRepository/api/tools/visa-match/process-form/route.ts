import { NextRequest, NextResponse } from 'next/server';
import { createClient } from '@supabase/supabase-js';
import OpenAI from 'openai';

// Initialize clients with correct environment variables
const supabase = createClient(
  process.env.NEXT_PUBLIC_SUPABASE_URL!,
  process.env.SUPABASE_KEY!
);

const openai = new OpenAI({
  apiKey: process.env.OPENAI_API_KEY!,
});

export async function POST(request: NextRequest) {
  try {
    const userData = await request.json();
    console.log('Process-form Visa Match - Dados recebidos:', userData);

    // Valida√ß√£o b√°sica
    if (!userData.email) {
      return NextResponse.json({ error: 'Email √© obrigat√≥rio' }, { status: 400 });
    }

    // Prompt otimizado para processo de formul√°rio
    const prompt = `
# VisaMatch - Consultoria Personalizada de Vistos Americanos

Com base no formul√°rio preenchido, forne√ßa uma consultoria especializada em vistos:

## Perfil do Candidato:
- Nome: ${userData.fullName || 'N√£o informado'}
- Email: ${userData.email}
- Profiss√£o: ${userData.profession || 'N√£o informado'}
- Estado Civil: ${userData.maritalStatus || 'N√£o informado'}
- Objetivos nos EUA: ${userData.usaObjectives || userData.goals || 'N√£o informado'}
- Aspira√ß√µes: ${userData.aspiracoes || 'N√£o informado'}

## Consultoria Personalizada:

### üéØ AN√ÅLISE DE ELEGIBILIDADE
- Avalia√ß√£o do perfil para diferentes categorias
- Pontos fortes que favorecem aprova√ß√£o
- √Åreas que precisam ser desenvolvidas
- Recomenda√ß√µes espec√≠ficas para o perfil

### üìã VISTOS RECOMENDADOS (em ordem de viabilidade)
Para cada op√ß√£o de visto:
- Categoria e tipo (EB-1, EB-5, H-1B, L-1, etc.)
- Compatibilidade com o perfil (%)
- Investimento necess√°rio
- Prazo m√©dio do processo
- Taxa de aprova√ß√£o atual
- Vantagens espec√≠ficas para o caso

### üõ†Ô∏è ESTRAT√âGIA PERSONALIZADA
- Melhor caminho considerando recursos e objetivos
- Prepara√ß√£o necess√°ria antes da aplica√ß√£o
- Timeline detalhada do processo
- Documenta√ß√£o espec√≠fica requerida

### ‚öñÔ∏è ASPECTOS LEGAIS IMPORTANTES
- Mudan√ßas recentes na legisla√ß√£o que afetam o caso
- Requisitos espec√≠ficos para a profiss√£o
- Dicas para maximizar chances de aprova√ß√£o
- Quando buscar assessoria jur√≠dica especializada

### üìÖ PLANO DE A√á√ÉO IMEDIATO
- Pr√≥ximos 30 dias: prepara√ß√£o inicial
- Pr√≥ximos 3-6 meses: documenta√ß√£o e qualifica√ß√µes
- Pr√≥ximos 12 meses: processo de aplica√ß√£o
- Contatos e recursos recomendados

Base todas as recomenda√ß√µes nas regulamenta√ß√µes atuais do USCIS e seja espec√≠fico sobre prazos, custos e probabilidades.
`;

    // Chamada para OpenAI
    const completion = await openai.chat.completions.create({
      model: "gpt-4",
      messages: [
        {
          role: "system",
          content: "Voc√™ √© um consultor especializado em imigra√ß√£o americana e legisla√ß√£o de vistos. Forne√ßa consultoria precisa baseada nas regulamenta√ß√µes atuais do USCIS e nas melhores pr√°ticas de imigra√ß√£o."
        },
        {
          role: "user",
          content: prompt
        }
      ],
      max_tokens: 4000,
      temperature: 0.7,
    });

    const aiResponse = completion.choices[0].message.content;

    // Salvar na tabela user_reports
    const { data: reportData, error: reportError } = await supabase
      .from('user_reports')
      .insert([
        {
          user_id: userData.email,
          tool_type: 'visa_match',
          input_data: userData,
          ai_response: aiResponse
        }
      ])
      .select()
      .single();

    if (reportError) {
      console.error('‚ùå Erro ao salvar visa_match process-form:', reportError);
      return NextResponse.json({ 
        error: 'Erro ao salvar relat√≥rio',
        details: reportError.message
      }, { status: 500 });
    }

    console.log('‚úÖ Visa Match process-form salvo com sucesso');

    return NextResponse.json({
      success: true,
      report: aiResponse,
      analysis: aiResponse, // Para compatibilidade
      reportId: reportData.id,
      tokensUsed: completion.usage?.total_tokens || 0
    });

  } catch (error) {
    console.error('Erro no Visa Match process-form:', error);
    return NextResponse.json({ 
      error: 'Erro interno do servidor',
      details: error instanceof Error ? error.message : 'Erro desconhecido'
    }, { status: 500 });
  }
}
