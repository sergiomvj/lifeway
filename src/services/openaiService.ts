import OpenAI from 'openai';
import { cacheService } from './cacheService';

// Configuration interface
interface OpenAIConfig {
  apiKey: string;
  timeout: number;
  maxRetries: number;
  retryDelay: number;
  model: string;
  temperature: number;
}

// Request options interface
interface RequestOptions {
  timeout?: number;
  maxRetries?: number;
  retryDelay?: number;
  onRetry?: (attempt: number, error: Error) => void;
  onSuccess?: (response: any, duration: number) => void;
  onError?: (error: Error, attempts: number) => void;
}

// Logging interface
interface LogEntry {
  timestamp: Date;
  operation: string;
  duration: number;
  success: boolean;
  error?: string;
  retryAttempt?: number;
  requestId: string;
}

class OpenAIService {
  private client: OpenAI;
  private config: OpenAIConfig;
  private logs: LogEntry[] = [];

  constructor(config?: Partial<OpenAIConfig>) {
    this.config = {
      apiKey: import.meta.env.VITE_OPENAI_API_KEY || '',
      timeout: 30000, // 30 seconds
      maxRetries: 3,
      retryDelay: 1000, // 1 second
      model: 'gpt-3.5-turbo',
      temperature: 0.7,
      ...config
    };

    this.client = new OpenAI({
      apiKey: this.config.apiKey,
      dangerouslyAllowBrowser: true // Para uso no frontend - em produ√ß√£o, mover para backend
    });
  }

  // Generate unique request ID for tracking
  private generateRequestId(): string {
    return `req_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;
  }

  // Log request details
  private log(entry: Omit<LogEntry, 'timestamp'>): void {
    const logEntry: LogEntry = {
      ...entry,
      timestamp: new Date()
    };
    
    this.logs.push(logEntry);
    
    // Keep only last 100 logs to prevent memory issues
    if (this.logs.length > 100) {
      this.logs = this.logs.slice(-100);
    }

    // Console logging for development
    if (import.meta.env.DEV) {
      console.log(`[OpenAI Service] ${entry.operation}:`, {
        success: entry.success,
        duration: `${entry.duration}ms`,
        error: entry.error,
        retryAttempt: entry.retryAttempt,
        requestId: entry.requestId
      });
    }
  }

  // Sleep utility for retry delays
  private sleep(ms: number): Promise<void> {
    return new Promise(resolve => setTimeout(resolve, ms));
  }

  // Enhanced request wrapper with retry logic and timeout
  private async makeRequest<T>(
    operation: string,
    requestFn: () => Promise<T>,
    options: RequestOptions = {}
  ): Promise<T> {
    const requestId = this.generateRequestId();
    const startTime = Date.now();
    const maxRetries = options.maxRetries ?? this.config.maxRetries;
    const retryDelay = options.retryDelay ?? this.config.retryDelay;
    const timeout = options.timeout ?? this.config.timeout;

    let lastError: Error | null = null;

    for (let attempt = 1; attempt <= maxRetries + 1; attempt++) {
      try {
        // Create timeout promise
        const timeoutPromise = new Promise<never>((_, reject) => {
          setTimeout(() => {
            reject(new Error(`Request timeout after ${timeout}ms`));
          }, timeout);
        });

        // Race between request and timeout
        const result = await Promise.race([
          requestFn(),
          timeoutPromise
        ]);

        const duration = Date.now() - startTime;

        // Log successful request
        this.log({
          operation,
          duration,
          success: true,
          requestId,
          retryAttempt: attempt > 1 ? attempt : undefined
        });

        // Call success callback
        options.onSuccess?.(result, duration);

        return result;
      } catch (error) {
        lastError = error as Error;
        const duration = Date.now() - startTime;

        // Log failed attempt
        this.log({
          operation,
          duration,
          success: false,
          error: lastError.message,
          requestId,
          retryAttempt: attempt
        });

        // If this is the last attempt, don't retry
        if (attempt > maxRetries) {
          break;
        }

        // Call retry callback
        options.onRetry?.(attempt, lastError);

        // Wait before retrying with exponential backoff
        const delay = retryDelay * Math.pow(2, attempt - 1);
        await this.sleep(delay);
      }
    }

    // Call error callback
    options.onError?.(lastError!, maxRetries + 1);

    throw lastError;
  }

  // Generate chat response with enhanced error handling and caching
  async generateChatResponse(
    message: string,
    conversationHistory: Array<{role: 'user' | 'assistant', content: string}> = [],
    options: RequestOptions = {}
  ): Promise<string> {
    // Create cache key data
    const cacheData = {
      message,
      conversationHistory,
      model: this.config.model,
      temperature: this.config.temperature
    };

    // Try to get from cache first
    const cachedResponse = await cacheService.get('chat', cacheData);
    if (cachedResponse) {
      console.log('[OpenAI Service] Using cached chat response');
      return cachedResponse;
    }
    const systemPrompt = `Voc√™ √© um especialista em imigra√ß√£o americana com mais de 15 anos de experi√™ncia. Voc√™ ajuda brasileiros que desejam imigrar para os Estados Unidos.

DIRETRIZES:
- Seja preciso, profissional e emp√°tico
- Forne√ßa informa√ß√µes atualizadas sobre vistos e processos de imigra√ß√£o
- Sempre mencione que cada caso √© √∫nico e recomende consulta com advogado especializado
- Use linguagem clara e acess√≠vel
- Seja espec√≠fico sobre custos, prazos e requisitos quando poss√≠vel
- Mantenha foco em imigra√ß√£o para os EUA
- Sempre que poss√≠vel, forne√ßa op√ß√µes alternativas
- Crie alternativas que componham a utiliza√ß√£o de vistos de estudantes como trampolim para outros vistos mais abrangentes

TIPOS DE VISTO PRINCIPAIS:
- EB-1: Para quem se destaca por talento, pesquisa relevante ou atua√ß√£o executiva.
- EB-2 NIW: Profissionais que impulsionem o crescimento econ√¥mico, tecnol√≥gico ou cultural dos EUA.
Sempre que possivel recomendar esses dois acima.

- F-1: Estudante : Sempre recomende esse visto como um cenario de alta probabilidade de aprova√ß√£o para criar condi√ß√µes de status e de investimento menor em outros vistos de residencia.
- H1-B: Trabalhadores especializados
- L-1: Transfer√™ncia interna de empresa
- O-1: Habilidades extraordin√°rias
- E-2: Investidor de tratado
- EB-5: Investidor (Green Card)

- K-1: Noivo(a) de cidad√£o americano

Responda de forma concisa mas completa, sempre em portugu√™s brasileiro.`;

    const messages = [
      { role: 'system' as const, content: systemPrompt },
      ...conversationHistory,
      { role: 'user' as const, content: message }
    ];

    return this.makeRequest(
      'generateChatResponse',
      async () => {
        const completion = await this.client.chat.completions.create({
          model: this.config.model,
          messages: messages,
          max_tokens: 500,
          temperature: this.config.temperature,
        });

        const content = completion.choices[0]?.message?.content;
        if (!content) {
          throw new Error('Empty response from OpenAI');
        }

        // Cache the response
        await cacheService.set('chat', cacheData, content);

        return content;
      },
      {
        ...options,
        onError: (error, attempts) => {
          console.error(`Failed to generate chat response after ${attempts} attempts:`, error);
          options.onError?.(error, attempts);
        }
      }
    );
  }

  // Generate visa recommendations with enhanced error handling and caching
  async generateVisaRecommendations(
    userProfile: Record<string, any>,
    options: RequestOptions = {}
  ): Promise<any[]> {
    // Create cache key data
    const cacheData = {
      userProfile,
      model: this.config.model,
      temperature: 0.3
    };

    // Try to get from cache first
    const cachedResponse = await cacheService.get('visa_recommendations', cacheData);
    if (cachedResponse) {
      console.log('[OpenAI Service] Using cached visa recommendations');
      return cachedResponse;
    }
    const prompt = `# Prompt: Estrat√©gias de Visto para os Estados Unidos - An√°lise Familiar Completa

## Objetivo do Relat√≥rio
Analisar o perfil completo da fam√≠lia e apresentar 3 estrat√©gias vi√°veis de obten√ß√£o de visto americano, considerando qualifica√ß√µes, estrutura familiar, recursos e objetivos de cada membro. Cada op√ß√£o ser√° detalhadamente justificada e incluir√° timeline, requisitos e impacto familiar.

## Estrutura do Relat√≥rio

### 1. AN√ÅLISE DE ELEGIBILIDADE FAMILIAR

**Perfil do Requerente Principal:**
- Qualifica√ß√µes profissionais e acad√™micas
- Experi√™ncia e especializa√ß√£o
- Recursos financeiros dispon√≠veis
- Hist√≥rico de viagens internacionais

**Composi√ß√£o Familiar:**
- C√¥njuge: qualifica√ß√µes, idade, profiss√£o
- Filhos: idades, situa√ß√£o acad√™mica, necessidades especiais
- Dependentes adicionais (se houver)

**Fatores de For√ßa da Aplica√ß√£o:**
- V√≠nculos com o Brasil (propriedades, neg√≥cios, fam√≠lia)
- Hist√≥rico limpo (criminal, fiscal, migrat√≥rio)
- Recursos financeiros comprovados
- Suporte de empregadores/institui√ß√µes americanas

**Potenciais Desafios:**
- Limita√ß√µes identificadas no perfil
- Riscos de nega√ß√£o
- Fatores que precisam ser fortalecidos

### 2. TR√äS ESTRAT√âGIAS DE VISTO RECOMENDADAS

---

#### üìã ESTRAT√âGIA 1: [TIPO DE VISTO] - [NOME DA ESTRAT√âGIA]
**Visto Principal:** [Ex: H-1B, L-1, O-1, EB-1, etc.]
**Vistos Dependentes:** [H-4, L-2, O-3, etc.]

**Por que esta op√ß√£o √© ideal para seu perfil:**
- Alinhamento com qualifica√ß√µes espec√≠ficas
- Compatibilidade com hist√≥rico profissional
- Adequa√ß√£o √† estrutura familiar
- Probabilidade de aprova√ß√£o baseada no perfil

**Requisitos Espec√≠ficos:**
- **Para o requerente principal:**
  - Documenta√ß√£o necess√°ria
  - Qualifica√ß√µes exigidas
  - Suporte institucional necess√°rio
- **Para c√¥njuge:**
  - Documentos requeridos
  - Possibilidade de trabalho nos EUA
- **Para filhos:**
  - Limites de idade
  - Documenta√ß√£o escolar
  - Considera√ß√µes educacionais

**Timeline Detalhado:**
- **Prepara√ß√£o (Meses 1-3):** Coleta de documentos, certifica√ß√µes, tradu√ß√µes
- **Aplica√ß√£o (Meses 4-6):** Submiss√£o, entrevistas, processamento
- **Aprova√ß√£o e Viagem (Meses 7-9):** Recebimento do visto, planejamento da mudan√ßa

**Investimento Financeiro:**
- Taxas governamentais: $X,XXX
- Advogado de imigra√ß√£o: $X,XXX
- Tradu√ß√µes e certifica√ß√µes: $X,XXX
- **Total estimado:** $X,XXX

**Benef√≠cios para a Fam√≠lia:**
- **Requerente:** Oportunidades profissionais, possibilidade de resid√™ncia permanente
- **C√¥njuge:** [Direito ao trabalho/estudo conforme o visto]
- **Filhos:** Acesso ao sistema educacional americano, desenvolvimento acad√™mico

**Caminho para Green Card:**
- Possibilidade de transi√ß√£o para resid√™ncia permanente
- Timeline estimado: X anos
- Requisitos adicionais necess√°rios

**Riscos e Limita√ß√µes:**
- Limita√ß√µes espec√≠ficas do visto
- Depend√™ncia de empregador/patrocinador
- Restri√ß√µes geogr√°ficas ou profissionais

---

#### üìã ESTRAT√âGIA 2: [TIPO DE VISTO] - [NOME DA ESTRAT√âGIA]
**Visto Principal:** [Ex: E-2, EB-5, F-1, etc.]
**Vistos Dependentes:** [E-2, EB-5 derivativo, F-2, etc.]

[Mesma estrutura detalhada da Estrat√©gia 1, adaptada para este tipo espec√≠fico de visto]

**Justificativa Espec√≠fica:**
- Por que esta alternativa se adequa ao perfil
- Vantagens comparativas √† Estrat√©gia 1
- Cen√°rios onde seria a melhor op√ß√£o

---

#### üìã ESTRAT√âGIA 3: [TIPO DE VISTO] - [NOME DA ESTRAT√âGIA]
**Visto Principal:** [Ex: Visto de turista com mudan√ßa de status, asylum, etc.]
**Vistos Dependentes:** [Derivativos correspondentes]

[Mesma estrutura detalhada, adaptada para este tipo espec√≠fico]

**Justificativa Espec√≠fica:**
- Quando esta seria a op√ß√£o mais vi√°vel
- Vantagens √∫nicas desta abordagem
- Adequa√ß√£o a situa√ß√µes espec√≠ficas da fam√≠lia

### 3. COMPARATIVO DAS ESTRAT√âGIAS

| Crit√©rio | Estrat√©gia 1 | Estrat√©gia 2 | Estrat√©gia 3 |
|----------|--------------|--------------|--------------||
| **Probabilidade de Aprova√ß√£o** | Alta/M√©dia/Baixa | Alta/M√©dia/Baixa | Alta/M√©dia/Baixa |
| **Tempo de Processamento** | X meses | X meses | X meses |
| **Investimento Total** | $X,XXX | $X,XXX | $X,XXX |
| **Flexibilidade Profissional** | Alta/M√©dia/Baixa | Alta/M√©dia/Baixa | Alta/M√©dia/Baixa |
| **Benef√≠cios para C√¥njuge** | Trabalho permitido/n√£o | Trabalho permitido/n√£o | Trabalho permitido/n√£o |
| **Educa√ß√£o dos Filhos** | P√∫blica gratuita/paga | P√∫blica gratuita/paga | P√∫blica gratuita/paga |
| **Caminho para Green Card** | Direto/Indireto/Inexistente | Direto/Indireto/Inexistente | Direto/Indireto/Inexistente |

### 4. RECOMENDA√á√ÉO PRINCIPAL

**Estrat√©gia Recomendada:** [N√∫mero da estrat√©gia]

**Justificativa Detalhada:**
- Por que esta √© a melhor op√ß√£o para seu perfil espec√≠fico
- An√°lise risk-benefit personalizada
- Compatibilidade com objetivos familiares de longo prazo

**Plano B:**
- Segunda op√ß√£o recomendada
- Quando considerar a alternativa
- Como preparar ambas simultaneamente

### 5. PLANO DE A√á√ÉO IMEDIATO

**Pr√≥ximos 30 dias:**
- [ ] Avalia√ß√£o detalhada com advogado de imigra√ß√£o especializado
- [ ] In√≠cio da coleta de documenta√ß√£o
- [ ] Pesquisa de oportunidades de trabalho/estudo nos EUA
- [ ] Or√ßamento detalhado dos custos

**Pr√≥ximos 90 dias:**
- [ ] Documenta√ß√£o completa e traduzida
- [ ] Networking com contatos nos EUA
- [ ] Prepara√ß√£o financeira para investimentos
- [ ] Planejamento log√≠stico familiar

**Pr√≥ximos 6-12 meses:**
- [ ] Aplica√ß√£o submetida
- [ ] Prepara√ß√£o para entrevistas
- [ ] Planejamento da mudan√ßa
- [ ] Prepara√ß√£o das crian√ßas para transi√ß√£o

### 6. RECURSOS ESPECIALIZADOS

**Advogados de Imigra√ß√£o Recomendados:**
- Escrit√≥rios especializados no tipo de visto escolhido
- Profissionais com experi√™ncia em casos brasileiros
- Avalia√ß√£o de custos e timeline

**Documenta√ß√£o Essencial:**
- Lista completa de documentos por tipo de visto
- √ìrg√£os emissores no Brasil
- Tradu√ß√µes juramentadas necess√°rias
- Apostilamento de Haia

**Prepara√ß√£o Familiar:**
- Cursos de ingl√™s intensivo
- Prepara√ß√£o psicol√≥gica das crian√ßas
- Pesquisa de escolas nos EUA
- Planejamento financeiro para os primeiros meses

### 7. CONSIDERA√á√ïES ESPECIAIS PARA FAM√çLIAS

**Educa√ß√£o dos Filhos:**
- Sistema educacional americano vs brasileiro
- Custos de educa√ß√£o por estado
- Programas para estudantes internacionais
- Continuidade do portugu√™s e cultura brasileira

**Adapta√ß√£o do C√¥njuge:**
- Revalida√ß√£o de diplomas/certifica√ß√µes
- Oportunidades de trabalho/estudo
- Networking profissional
- Grupos de apoio para brasileiros

**Manuten√ß√£o dos V√≠nculos com o Brasil:**
- Propriedades e investimentos
- Obriga√ß√µes fiscais
- Relacionamentos familiares
- Planejamento de visitas

---

## Vari√°veis de Entrada Necess√°rias

### Dados do Requerente Principal
- **Profissionais:** Forma√ß√£o, experi√™ncia, especializa√ß√£o, certifica√ß√µes
- **Pessoais:** Idade, estado civil, hist√≥rico de viagens
- **Financeiros:** Renda, patrim√¥nio, capacidade de investimento
- **Legais:** Hist√≥rico criminal, fiscal, processos judiciais

### Dados do C√¥njuge (se aplic√°vel)
- Qualifica√ß√µes profissionais e acad√™micas
- Interesse em trabalhar/estudar nos EUA
- Idade e situa√ß√£o legal

### Dados dos Filhos (se aplic√°vel)
- Idades atuais
- Situa√ß√£o acad√™mica
- Necessidades especiais
- Adaptabilidade a mudan√ßas

### Objetivos e Prefer√™ncias
- **Profissionais:** Carreira desejada nos EUA, setor de interesse
- **Geogr√°ficos:** Estados ou cidades preferidas
- **Temporais:** Urg√™ncia da mudan√ßa, timeline desejado
- **Familiares:** Prioridades para c√¥njuge e filhos

### Recursos Dispon√≠veis
- Or√ßamento total para o processo
- Flexibilidade de investimento
- Tempo dispon√≠vel para prepara√ß√£o
- Suporte de empresas/institui√ß√µes

### Conex√µes nos EUA
- Contatos profissionais
- Familiares ou amigos residentes
- Ofertas de trabalho/estudo
- Conhecimento de advogados especializados

---

## Instru√ß√µes de Uso

1. **An√°lise T√©cnica Rigorosa:** Base todas as recomenda√ß√µes na legisla√ß√£o atual de imigra√ß√£o americana
2. **Personaliza√ß√£o Total:** Cada estrat√©gia deve ser √∫nica para o perfil apresentado
3. **Realismo:** Apresente probabilidades honestas de aprova√ß√£o
4. **Vis√£o Familiar:** Considere impacto em todos os membros da fam√≠lia
5. **Atualiza√ß√µes:** Sempre mencione que leis de imigra√ß√£o podem mudar
6. **Disclaimer Legal:** Recomende sempre consulta com advogado especializado
7. **Timeline Realista:** Use dados atuais de processamento do USCIS

## Avisos Importantes

- **Este relat√≥rio √© informativo e n√£o constitui consultoria jur√≠dica**
- **Leis de imigra√ß√£o americanas mudam frequentemente**
- **Consulta com advogado especializado √© essencial**
- **Cada caso √© √∫nico e requer an√°lise individual**
- **Documenta√ß√£o e requisitos podem variar por consulado**

Com base no perfil do usu√°rio:
- Objetivo: ${userProfile.purpose}
- Educa√ß√£o: ${userProfile.education}
- Experi√™ncia: ${userProfile.experience}
- Oferta de trabalho: ${userProfile.jobOffer}
- Capacidade de investimento: ${userProfile.investment}
- Prazo desejado: ${userProfile.timeline}

Forne√ßa uma an√°lise detalhada em formato JSON com os 3 melhores vistos, incluindo:
- type: c√≥digo do visto
- name: nome completo
- match: percentual de compatibilidade (0-100)
- description: descri√ß√£o breve
- requirements: array de requisitos principais
- timeline: prazo estimado
- cost: faixa de custo
- pros: array de vantagens
- cons: array de desvantagens

Responda apenas com o JSON v√°lido, sem texto adicional.`;

    return this.makeRequest(
      'generateVisaRecommendations',
      async () => {
        const completion = await this.client.chat.completions.create({
          model: this.config.model,
          messages: [{ role: 'user', content: prompt }],
          max_tokens: 1500,
          temperature: 0.3,
        });

        const response = completion.choices[0]?.message?.content;
        if (!response) {
          throw new Error('Empty response from OpenAI');
        }

        try {
          // Clean response to ensure valid JSON
          const cleanedResponse = response.trim().replace(/```json\n?|\n?```/g, '');
          const parsed = JSON.parse(cleanedResponse);
          
          // Validate response structure
          if (!Array.isArray(parsed)) {
            throw new Error('Response is not an array');
          }

          // Validate each recommendation has required fields
          for (const rec of parsed) {
            if (!rec.type || !rec.name || typeof rec.match !== 'number') {
              throw new Error('Invalid recommendation structure');
            }
          }

          // Cache the successful response
          await cacheService.set('visa_recommendations', cacheData, parsed);
          
          return parsed;
        } catch (parseError) {
          throw new Error(`Failed to parse JSON response: ${parseError.message}`);
        }
      },
      {
        ...options,
        onError: (error, attempts) => {
          console.error(`Failed to generate visa recommendations after ${attempts} attempts:`, error);
          options.onError?.(error, attempts);
        }
      }
    );
  }

  // Generate dream action plan with enhanced error handling and caching
  async generateDreamActionPlan(
    goal: Record<string, any>,
    options: RequestOptions = {}
  ): Promise<string> {
    // Create cache key data
    const cacheData = {
      goal,
      model: this.config.model,
      temperature: 0.5
    };

    // Try to get from cache first
    const cachedResponse = await cacheService.get('dream_action_plan', cacheData);
    if (cachedResponse) {
      console.log('[OpenAI Service] Using cached dream action plan');
      return cachedResponse;
    }
    const prompt = `# Prompt: Gerador de Sonhos - Transforma√ß√£o do Estilo de Vida Familiar

## Miss√£o do Relat√≥rio
Inspirar e orientar fam√≠lias a visualizarem e planejarem mudan√ßas transformadoras de estilo de vida, criando um futuro onde cada membro da fam√≠lia pode florescer pessoal, acad√™mica e profissionalmente. Este relat√≥rio √© um convite para sonhar grande e tra√ßar caminhos concretos para realizar esses sonhos.

## Estrutura do Relat√≥rio

### 1. VIS√ÉO INSPIRADORA
**"Imagine sua fam√≠lia daqui a 5 anos..."**
- Cen√°rio inspirador baseado no perfil familiar
- Conquistas pessoais e profissionais alcan√ßadas
- Qualidade de vida transformada
- Legado sendo constru√≠do

### 2. MAPEAMENTO DOS SONHOS FAMILIARES

**Sonhos Individuais Identificados:**
- **Adulto(s):** [Aspira√ß√µes profissionais, pessoais, criativas]
- **Filhos:** [Talentos a desenvolver, paix√µes a explorar]
- **Fam√≠lia:** [Experi√™ncias compartilhadas, valores a cultivar]

**Potenciais Ocultos Descobertos:**
- Talentos naturais n√£o explorados
- Interesses que podem virar oportunidades
- Conex√µes entre hobbies e possibilidades de crescimento

### 3. TR√äS CEN√ÅRIOS DE TRANSFORMA√á√ÉO

---

#### üåü CEN√ÅRIO 1: [NOME INSPIRADOR DO ESTILO DE VIDA]
**Localiza√ß√£o:** [Cidade/Regi√£o/Pa√≠s]
**Ess√™ncia:** [Frase que capture o esp√≠rito da mudan√ßa]

**A Nova Vida:**
- Como seria o dia a dia da fam√≠lia
- Ambiente f√≠sico e social
- Ritmo de vida e prioridades

**Crescimento Pessoal:**
- **Para os Adultos:** Novas habilidades, paix√µes redescobertas, prop√≥sito renovado
- **Para as Crian√ßas:** Experi√™ncias √∫nicas de aprendizado, talentos cultivados
- **Para a Fam√≠lia:** Valores fortalecidos, conex√µes aprofundadas

**Crescimento Acad√™mico:**
- Oportunidades educacionais diferenciadas
- Sistemas de ensino inovadores
- Experi√™ncias de aprendizado pr√°tico
- Interc√¢mbios culturais e lingu√≠sticos

**Crescimento Profissional:**
- Novas carreiras poss√≠veis no local
- Oportunidades de empreendedorismo
- Mercados emergentes a explorar
- Networking internacional

**O Caminho da Transforma√ß√£o:**
- **Ano 1:** Primeiros passos e adapta√ß√µes
- **Anos 2-3:** Consolida√ß√£o e crescimento
- **Anos 4-5:** Colheita dos frutos e expans√£o

**Investimento na Mudan√ßa:**
- Recursos financeiros necess√°rios
- Tempo de planejamento e transi√ß√£o
- Prepara√ß√£o emocional e log√≠stica

**Benef√≠cios √önicos:**
- Experi√™ncias imposs√≠veis no estilo atual
- Oportunidades exclusivas da regi√£o
- Impacto positivo no desenvolvimento familiar

---

#### üåü CEN√ÅRIO 2: [NOME INSPIRADOR DO ESTILO DE VIDA]
**Localiza√ß√£o:** [Cidade/Regi√£o/Pa√≠s]
**Ess√™ncia:** [Frase que capture o esp√≠rito da mudan√ßa]

[Mesma estrutura detalhada do Cen√°rio 1]

---

#### üåü CEN√ÅRIO 3: [NOME INSPIRADOR DO ESTILO DE VIDA]
**Localiza√ß√£o:** [Cidade/Regi√£o/Pa√≠s]
**Ess√™ncia:** [Frase que capture o esp√≠rito da mudan√ßa]

[Mesma estrutura detalhada do Cen√°rio 1]

### 4. DESTINOS ALTERNATIVOS DOS SONHOS

**Baseado nos sonhos familiares, considerem tamb√©m:**

#### üèùÔ∏è [DESTINO ALTERNATIVO 1]
- **Por que √© m√°gico para voc√™s:** Conex√£o com os sonhos familiares
- **Oportunidades √∫nicas:** O que s√≥ √© poss√≠vel l√°
- **Crescimento familiar:** Como cada membro floresceria

#### üèîÔ∏è [DESTINO ALTERNATIVO 2]
- [Mesma estrutura inspiradora]

### 5. JORNADA DE REALIZA√á√ÉO DOS SONHOS

**üå± FASE SEMEAR (Primeiros 6 meses):**
- Pesquisa profunda dos destinos
- Desenvolvimento de habilidades preparat√≥rias
- Constru√ß√£o da reserva financeira
- Alinhamento familiar dos sonhos

**üåø FASE CRESCER (6-18 meses):**
- Implementa√ß√£o do plano de mudan√ßa
- Primeiras experi√™ncias no novo local
- Estabelecimento de rotinas e conex√µes
- Adapta√ß√£o e descobertas

**üå≥ FASE FLORESCER (18 meses em diante):**
- Consolida√ß√£o do novo estilo de vida
- Colheita das oportunidades plantadas
- Expans√£o das possibilidades
- Inspira√ß√£o para outros sonhos

### 6. FERRAMENTAS PARA MATERIALIZAR SONHOS

**Visualiza√ß√£o e Planejamento:**
- Quadro de vis√£o familiar
- Di√°rio de sonhos e progressos
- Metas trimestrais inspiradoras
- Celebra√ß√µes de marcos conquistados

**Prepara√ß√£o Pr√°tica:**
- Cursos e capacita√ß√µes necess√°rias
- Documenta√ß√£o e burocracias
- Networking estrat√©gico
- Reserva de emerg√™ncia

**Mantendo a Motiva√ß√£o:**
- Hist√≥rias inspiradoras de fam√≠lias similares
- Comunidades de apoio online
- Mentores na jornada
- Rituais familiares de reafirma√ß√£o dos sonhos

### 7. SUPERANDO MEDOS E LIMITA√á√ïES

**Medos Comuns e Como Transform√°-los:**
- "E se n√£o der certo?" ‚Üí "E se der melhor que imaginamos?"
- "√â muito arriscado" ‚Üí "Qual o risco de n√£o tentar?"
- "As crian√ßas v√£o sofrer" ‚Üí "Que oportunidades √∫nicas ter√£o?"

**Limita√ß√µes em Oportunidades:**
- Transformar obst√°culos em trampolins
- Solu√ß√µes criativas para cada desafio
- Rede de apoio para superar dificuldades

---

## Vari√°veis de Entrada Necess√°rias

### Composi√ß√£o Familiar
- Membros da fam√≠lia (idades, personalidades)
- Din√¢mica familiar atual
- Valores e princ√≠pios importantes
- Tradi√ß√µes que querem manter/criar

### Sonhos e Aspira√ß√µes
- **Adultos:** Sonhos profissionais, pessoais, de contribui√ß√£o
- **Crian√ßas:** Interesses, talentos, curiosidades
- **Fam√≠lia:** Experi√™ncias desejadas, legado a construir

### Situa√ß√£o Atual
- Estilo de vida presente
- Satisfa√ß√µes e insatisfa√ß√µes
- Recursos dispon√≠veis
- Flexibilidade para mudan√ßas

### Interesses e Paix√µes
- Hobbies de cada membro
- Atividades que energizam a fam√≠lia
- Causas que os motivam
- Experi√™ncias que sonham viver

### Crit√©rios Importantes
- Tipo de ambiente desejado (urbano/rural/praiano/montanha)
- Clima preferido
- Proximidade com natureza/cultura/oportunidades
- Custo de vida aceit√°vel

### Horizontes Geogr√°ficos
- Locais que sempre sonharam conhecer
- Culturas que os fascinam
- Idiomas que gostariam de dominar
- Aventuras geogr√°ficas desejadas

---

## Instru√ß√µes de Uso - Tom Inspirador

1. **Comece sempre com esperan√ßa:** Cada fam√≠lia tem potenciais incr√≠veis a desbravar
2. **Pense em abund√¢ncia:** Foque nas possibilidades, n√£o nas limita√ß√µes
3. **Seja espec√≠fico nos sonhos:** Detalhe como seria a vida transformada
4. **Conecte com emo√ß√µes:** Use linguagem que toque o cora√ß√£o
5. **Mostre caminhos concretos:** Sonhos precisam de planos realiz√°veis
6. **Celebre a coragem:** Reconhe√ßa a bravura de sonhar com mudan√ßas
7. **Inspire a√ß√£o:** Termine sempre com pr√≥ximos passos motivadores

## Frases Inspiradoras para Usar

- "Imaginem acordar todos os dias empolgados com as possibilidades..."
- "Seus filhos um dia contar√£o esta hist√≥ria de coragem..."
- "Este n√£o √© apenas um lugar, √© o cen√°rio onde seus sonhos ganham vida..."
- "A maior aventura da fam√≠lia est√° esperando por voc√™s..."
- "Cada desafio √© uma oportunidade disfar√ßada de crescimento..."

**Lembre-se:** Este relat√≥rio n√£o √© apenas sobre mudan√ßa de local, √© sobre transforma√ß√£o de destino. Cada palavra deve plantar sementes de possibilidades no cora√ß√£o da fam√≠lia.


Perfil:
- Nome: ${goal.nome}
- Idade: ${goal.idade}
- Profiss√£o: ${goal.profissao}
- Experi√™ncia: ${goal.experiencia}

Objetivo:
- Objetivo principal: ${goal.objetivo_principal}
- Categoria: ${goal.categoria}
- Timeline: ${goal.timeline}
- Prioridade: ${goal.prioridade}

Situa√ß√£o atual:
- ${goal.situacao_atual}
- Recursos dispon√≠veis: ${goal.recursos_disponiveis}
- Obst√°culos: ${goal.obstaculos}

Detalhes:
- ${goal.detalhes_especificos}
- Motiva√ß√£o: ${goal.motivacao}

Crie um plano de a√ß√£o em etapas numeradas, espec√≠fico e pr√°tico, com prazos realistas.`;

    return this.makeRequest(
      'generateDreamActionPlan',
      async () => {
        const completion = await this.client.chat.completions.create({
          model: this.config.model,
          messages: [{ role: 'user', content: prompt }],
          max_tokens: 1000,
          temperature: 0.5,
        });

        const content = completion.choices[0]?.message?.content;
        if (!content) {
          throw new Error('Empty response from OpenAI');
        }

        // Cache the response
        await cacheService.set('dream_action_plan', cacheData, content);

        return content;
      },
      {
        ...options,
        onError: (error, attempts) => {
          console.error(`Failed to generate dream action plan after ${attempts} attempts:`, error);
          options.onError?.(error, attempts);
        }
      }
    );
  }

  // Get service statistics
  getStats() {
    const totalRequests = this.logs.length;
    const successfulRequests = this.logs.filter(log => log.success).length;
    const failedRequests = totalRequests - successfulRequests;
    const averageDuration = totalRequests > 0 
      ? this.logs.reduce((sum, log) => sum + log.duration, 0) / totalRequests 
      : 0;

    return {
      totalRequests,
      successfulRequests,
      failedRequests,
      successRate: totalRequests > 0 ? (successfulRequests / totalRequests) * 100 : 0,
      averageDuration: Math.round(averageDuration),
      recentLogs: this.logs.slice(-10) // Last 10 logs
    };
  }

  // Clear logs
  clearLogs() {
    this.logs = [];
  }

  // Update configuration
  updateConfig(newConfig: Partial<OpenAIConfig>) {
    this.config = { ...this.config, ...newConfig };
  }
}

// Create singleton instance
export const openaiService = new OpenAIService();

// Export for backward compatibility
export const generateChatResponse = (
  message: string,
  conversationHistory: Array<{role: 'user' | 'assistant', content: string}> = []
) => openaiService.generateChatResponse(message, conversationHistory);

export const generateVisaRecommendations = (userProfile: Record<string, any>) => 
  openaiService.generateVisaRecommendations(userProfile);

export const generateDreamActionPlan = (goal: Record<string, any>) => 
  openaiService.generateDreamActionPlan(goal);

export default openaiService;
